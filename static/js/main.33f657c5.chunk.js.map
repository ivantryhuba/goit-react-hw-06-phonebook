{"version":3,"sources":["components/Container/Container.styles.js","components/Container/Container.js","redux/contactsTypes.js","redux/contactsActions.js","components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styles.js","components/ContactList/ContactList.js","components/Notification/Notification.styles.js","components/Notification/Notification.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","App.styles.js","App.js","redux/contactsReducer.js","redux/contactsStore.js","index.js"],"names":["ContainerStyled","styled","div","Container","children","ADD","REMOVE","CHANGE_FILTER","newContact","type","payload","id","value","FormStyled","form","LabelStyled","label","InputStyled","input","SubmitButtonStyled","button","connect","dispatch","onSubmit","contactsActions","useState","setId","name","setName","number","setNumber","handleInputValues","evt","currentTarget","uuidv4","nameInputId","numberInputId","preventDefault","htmlFor","placeholder","onChange","title","required","ContactListStyled","ul","ContactItemStyled","li","RemoveBtnStyled","getContacts","allContacts","filter","normalizeFilter","toLowerCase","contact","toLocaleLowerCase","includes","contactList","contacts","onRemoveContact","map","onClick","NotificationStyled","p","Notification","text","Filter","allProps","defaultProps","state","target","H1Styled","h1","H2Styled","h2","App","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33f657c5.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 15px;\n  margin-bottom: 15px;\n\n  width: 500px;\n  padding: 10px;\n\n  border: 2px solid red;\n  border-radius: 20px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ContainerStyled } from './Container.styles';\n\nexport const Container = ({ children }) => {\n  return <ContainerStyled>{children}</ContainerStyled>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","const ADD = 'contacts/Add';\nconst REMOVE = 'contacts/Remove';\nconst CHANGE_FILTER = 'contacts/ChangeFilter';\n\nexport { ADD, REMOVE, CHANGE_FILTER };\n","import { ADD, REMOVE, CHANGE_FILTER } from './contactsTypes';\n\nconst addContact = newContact => ({\n  type: ADD,\n  payload: newContact,\n});\n\nconst removeContact = id => ({\n  type: REMOVE,\n  payload: id,\n});\n\nconst changeFilter = value => ({\n  type: CHANGE_FILTER,\n  payload: value,\n});\n\nexport default { addContact, removeContact, changeFilter };\n","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  margin-bottom: 20px;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const LabelStyled = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const InputStyled = styled.input`\n  width: 250px;\n  margin-bottom: 15px;\n  padding: 10px;\n  border: 2px solid green;\n  border-radius: 10px;\n`;\n\nexport const SubmitButtonStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 150px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px;\n\n  font-size: 15px;\n  font-weight: 700;\n\n  background-color: yellow;\n  border: 2px solid green;\n  border-radius: 20px;\n`;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contactsActions';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\n// import { Input } from '../Input/Input';\nimport {\n  FormStyled,\n  LabelStyled,\n  InputStyled,\n  SubmitButtonStyled,\n} from './ContactForm.styles';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputValues = evt => {\n    const { name, value } = evt.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n\n    setId(uuidv4());\n  };\n\n  const resetForm = () => {\n    setId('');\n    setName('');\n    setNumber('');\n  };\n\n  const submitForm = evt => {\n    evt.preventDefault();\n    onSubmit({ id, name, number });\n    resetForm();\n  };\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  return (\n    <FormStyled onSubmit={submitForm}>\n      <LabelStyled htmlFor={nameInputId}>Name</LabelStyled>\n      <InputStyled\n        id={nameInputId}\n        type={'text'}\n        name={'name'}\n        placeholder={'Jason Born'}\n        // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={name}\n        onChange={handleInputValues}\n        title={\n          \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        }\n        required={true}\n      />\n\n      <LabelStyled htmlFor={numberInputId}>Number</LabelStyled>\n      <InputStyled\n        id={numberInputId}\n        type={'tel'}\n        name={'number'}\n        placeholder={'+44-787-123-45-67'}\n        // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        value={number}\n        onChange={handleInputValues}\n        title={\n          'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n        }\n        required={true}\n      />\n\n      {/* <Input\n        id={numberInputId}\n        type={'tel'}\n        label={'Number'}\n        name={'number'}\n        placeholder={'+44-787-123-45-67'}\n        // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        value={number}\n        onChange={handleInputValues}\n        title={\n          'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n        }\n        required={true}\n      /> */}\n\n      <SubmitButtonStyled type=\"submit\">Add contact</SubmitButtonStyled>\n    </FormStyled>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: newContact => dispatch(contactsActions.addContact(newContact)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import styled from '@emotion/styled';\n\nexport const ContactListStyled = styled.ul`\n  width: 100%;\n  margin-top: 10px;\n  padding: 15px;\n  font-size: 40px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const ContactItemStyled = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n`;\n\nexport const RemoveBtnStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 75px;\n  margin-left: auto;\n  padding: 5px;\n\n  font-size: 15px;\n  font-weight: 500;\n\n  background-color: turquoise;\n  border: 2px solid orangered;\n  border-radius: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../../redux/contactsActions';\nimport { connect } from 'react-redux';\nimport {\n  ContactListStyled,\n  ContactItemStyled,\n  RemoveBtnStyled,\n} from './ContactList.styles';\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <ContactListStyled>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItemStyled key={id}>\n          {name} : {number}\n          <RemoveBtnStyled type=\"button\" onClick={() => onRemoveContact(id)}>\n            Remove\n          </RemoveBtnStyled>\n        </ContactItemStyled>\n      ))}\n    </ContactListStyled>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nconst getContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizeFilter),\n  );\n};\n\nconst mapStateToProps = ({ contactList: { contacts, filter } }) => {\n  return { contacts: getContacts(contacts, filter) };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onRemoveContact: id => dispatch(contactsActions.removeContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import styled from '@emotion/styled';\n\nexport const NotificationStyled = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  color: orange;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationStyled } from './Notification.styles';\n\nexport const Notification = ({ text }) => {\n  return <NotificationStyled>{text}</NotificationStyled>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const LabelStyled = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const InputStyled = styled.input`\n  width: 250px;\n  margin-bottom: 15px;\n  padding: 10px;\n  border: 2px solid green;\n  border-radius: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contactsActions';\nimport { LabelStyled, InputStyled } from './Filter.styles';\n\nconst Filter = ({\n  id,\n  type,\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  title,\n  required,\n  ...allProps\n}) => {\n  return (\n    <>\n      <LabelStyled htmlFor={id}>{label}</LabelStyled>\n      <InputStyled\n        id={id}\n        type={type}\n        name={name}\n        {...allProps}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        title={title}\n        required={required}\n      />\n    </>\n  );\n};\n\nFilter.defaultProps = {\n  type: 'text',\n  placeholder: '',\n  title: '',\n  required: false,\n};\n\nFilter.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contactList.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: evt => dispatch(contactsActions.changeFilter(evt.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styled from '@emotion/styled';\n\nexport const H1Styled = styled.h1`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  font-size: 40px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const H2Styled = styled.h2`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 30px;\n  font-weight: 700;\n  color: black;\n`;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Container } from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport { Notification } from './components/Notification/Notification';\nimport Filter from './components/Filter/Filter';\nimport { H1Styled, H2Styled } from './App.styles';\n\nconst App = () => {\n  // const storageContacts = window.localStorage.getItem('contacts');\n  // const parsedContacts = JSON.parse(storageContacts);\n  // const [filter, setFilter] = useState('');\n\n  // const getContacts = () => {\n  //   return contacts.filter(contact =>\n  //     contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\n  //   );\n  // };\n\n  // const addContact = newContact => {\n  //   if (\n  //     contacts.some(\n  //       contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n  //     )\n  //   ) {\n  //     alert(\n  //       'You have contact with this name, please remove old contact and create new',\n  //     );\n  //     return;\n  //   }\n\n  //   setContacts([newContact, ...contacts]);\n  // };\n\n  // const removeContact = data => {\n  //   setContacts(contacts.filter(contact => contact.id !== data));\n  // };\n\n  // const changeFilterValue = evt => {\n  //   setFilter(evt.target.value);\n  // };\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const mainContacts = getContacts();\n\n  return (\n    <Container>\n      <H1Styled>PhoneBook</H1Styled>\n      <H2Styled>Add contact</H2Styled>\n      <ContactForm />\n\n      <H2Styled>Contacts</H2Styled>\n\n      <>\n        <Filter\n          id={uuidv4()}\n          label={'Find contacts by name'}\n          placeholder={'Boris Britva'}\n          name={'search'}\n        />\n\n        <ContactList />\n      </>\n\n      <Notification text={'You don`t have any contacts'} />\n\n      {/* {mainContacts.length > 0 ? (\n        <>\n          <Input\n            id={uuidv4()}\n            label={'Find contacts by name'}\n            placeholder={'Boris Britva'}\n            name={'search'}\n            value={filter}\n            onChange={changeFilterValue}\n          />\n\n          <ContactList/>\n        </>\n      ) : (\n        <Notification text={'You don`t have any contacts'} />\n      )} */}\n    </Container>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { ADD, REMOVE, CHANGE_FILTER } from './contactsTypes';\n\nconst contacts = (state = [], { type, payload }) => {\n  switch (type) {\n    case ADD:\n      return [...state, payload];\n\n    case REMOVE:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ contacts, filter });\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contactsReducer';\n\nconst rootReducer = combineReducers({\n  contactList: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/contactsStore';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}