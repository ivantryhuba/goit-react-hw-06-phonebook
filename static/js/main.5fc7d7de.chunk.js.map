{"version":3,"sources":["components/Container/Container.styles.js","components/Container/Container.js","components/Input/Input.styles.js","components/Input/Input.js","components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styles.js","components/ContactList/ContactList.js","components/Notification/Notification.styles.js","components/Notification/Notification.js","App.styles.js","App.js","index.js"],"names":["ContainerStyled","styled","div","Container","children","LabelStyled","label","InputStyled","input","Input","id","type","name","placeholder","value","onChange","title","required","allProps","htmlFor","defaultProps","FormStyled","form","SubmitButtonStyled","button","ContactForm","onSubmit","useState","setId","setName","number","setNumber","handleInputValues","evt","currentTarget","uuidv4","preventDefault","pattern","ContactListStyled","ul","ContactItemStyled","li","RemoveBtnStyled","ContactList","contacts","onRemoveContact","map","onClick","NotificationStyled","p","Notification","text","H1Styled","h1","H2Styled","h2","App","storageContacts","window","localStorage","getItem","parsedContacts","JSON","parse","setContacts","filter","setFilter","useEffect","setItem","stringify","mainContacts","contact","toLocaleLowerCase","includes","toLowerCase","newContact","some","alert","length","target","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fc7d7de.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 15px;\n  margin-bottom: 15px;\n\n  width: 500px;\n  padding: 10px;\n\n  border: 2px solid red;\n  border-radius: 20px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ContainerStyled } from './Container.styles';\n\nexport const Container = ({ children }) => {\n  return <ContainerStyled>{children}</ContainerStyled>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const LabelStyled = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const InputStyled = styled.input`\n  width: 250px;\n  margin-bottom: 15px;\n  padding: 10px;\n  border: 2px solid green;\n  border-radius: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LabelStyled, InputStyled } from './Input.styles';\n\nexport const Input = ({\n  id,\n  type,\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  title,\n  required,\n  ...allProps\n}) => {\n  return (\n    <>\n      <LabelStyled htmlFor={id}>{label}</LabelStyled>\n      <InputStyled\n        id={id}\n        type={type}\n        name={name}\n        {...allProps}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        title={title}\n        required={required}\n      />\n    </>\n  );\n};\n\nInput.defaultProps = {\n  type: 'text',\n  placeholder: '',\n  title: '',\n  required: false,\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n};\n","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  margin-bottom: 20px;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const SubmitButtonStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 150px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px;\n\n  font-size: 15px;\n  font-weight: 700;\n\n  background-color: yellow;\n  border: 2px solid green;\n  border-radius: 20px;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Input } from '../Input/Input';\nimport { FormStyled, SubmitButtonStyled } from './ContactForm.styles';\n\nexport const ContactForm = ({ onSubmit }) => {\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputValues = evt => {\n    const { name, value } = evt.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n\n    setId(uuidv4());\n  };\n\n  const resetForm = () => {\n    setId('');\n    setName('');\n    setNumber('');\n  };\n\n  const submitForm = evt => {\n    evt.preventDefault();\n    onSubmit({ id, name, number });\n    resetForm();\n  };\n\n  return (\n    <FormStyled onSubmit={submitForm}>\n      <Input\n        id={uuidv4()}\n        type={'text'}\n        label={'Name'}\n        name={'name'}\n        placeholder={'Jason Born'}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={name}\n        onChange={handleInputValues}\n        title={\n          \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        }\n        required={true}\n      />\n\n      <Input\n        id={uuidv4()}\n        type={'tel'}\n        label={'Number'}\n        name={'number'}\n        placeholder={'+44-787-123-45-67'}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        value={number}\n        onChange={handleInputValues}\n        title={\n          'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n        }\n        required={true}\n      />\n\n      <SubmitButtonStyled type=\"submit\">Add contact</SubmitButtonStyled>\n    </FormStyled>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListStyled = styled.ul`\n  width: 100%;\n  margin-top: 10px;\n  padding: 15px;\n  font-size: 40px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const ContactItemStyled = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n`;\n\nexport const RemoveBtnStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 75px;\n  margin-left: auto;\n  padding: 5px;\n\n  font-size: 15px;\n  font-weight: 500;\n\n  background-color: turquoise;\n  border: 2px solid orangered;\n  border-radius: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  ContactListStyled,\n  ContactItemStyled,\n  RemoveBtnStyled,\n} from './ContactList.styles';\n\nexport const ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <ContactListStyled>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItemStyled key={id}>\n          {name} : {number}\n          <RemoveBtnStyled type=\"button\" onClick={() => onRemoveContact(id)}>\n            Remove\n          </RemoveBtnStyled>\n        </ContactItemStyled>\n      ))}\n    </ContactListStyled>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const NotificationStyled = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  color: orange;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationStyled } from './Notification.styles';\n\nexport const Notification = ({ text }) => {\n  return <NotificationStyled>{text}</NotificationStyled>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const H1Styled = styled.h1`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  font-size: 40px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const H2Styled = styled.h2`\n  display: block;\n  margin-bottom: 10px;\n  font-size: 30px;\n  font-weight: 700;\n  color: black;\n`;\n","import { useState, useEffect } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Container } from './components/Container/Container';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Notification } from './components/Notification/Notification';\nimport { Input } from './components/Input/Input';\n\nimport { H1Styled, H2Styled } from './App.styles';\n\nconst App = () => {\n  const storageContacts = window.localStorage.getItem('contacts');\n  const parsedContacts = JSON.parse(storageContacts);\n\n  const [contacts, setContacts] = useState(parsedContacts ?? []);\n  const [filter, setFilter] = useState('');\n\n  const getContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const addContact = newContact => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n      )\n    ) {\n      alert(\n        'You have contact with this name, please remove old contact and create new',\n      );\n      return;\n    }\n\n    setContacts([newContact, ...contacts]);\n  };\n\n  const removeContact = data => {\n    setContacts(contacts.filter(contact => contact.id !== data));\n  };\n\n  const changeFilterValue = evt => {\n    setFilter(evt.target.value);\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const mainContacts = getContacts();\n\n  return (\n    <Container>\n      <H1Styled>PhoneBook</H1Styled>\n      <H2Styled>Add contact</H2Styled>\n      <ContactForm onSubmit={addContact} />\n\n      <H2Styled>Contacts</H2Styled>\n      {mainContacts.length > 0 ? (\n        <>\n          {/* Filter */}\n          <Input\n            id={uuidv4()}\n            label={'Find contacts by name'}\n            placeholder={'Boris Britva'}\n            name={'search'}\n            value={filter}\n            onChange={changeFilterValue}\n          />\n\n          <ContactList\n            contacts={mainContacts}\n            onRemoveContact={removeContact}\n          />\n        </>\n      ) : (\n        <Notification text={'You don`t have any contacts'} />\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}